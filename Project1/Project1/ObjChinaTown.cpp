//使用するヘッダーファイル
#include"GameL\DrawTexture.h"
#include"GameL/DrawFont.h"
#include"GameL\WinInputs.h"
#include"GameL\SceneManager.h"
#include"GameL\SceneObjManager.h"

#include"GameHead.h"
#include "ObjChinaTown.h"

//使用するネームスペース
using namespace GameL;

//イニシャライズ
void CObjChinaTown::Init()
{
	mx_scroll = 0.0f;
	my_scroll = 0.0f;

	//マップ情報
	int block_data[25][55] =
	{
		{4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5},
		{4,3,3,4,5,3,3,5,4,3,3,4,5,3,3,5,4,3,3,4,5,3,3,5,4,3,3,4,5,3,3,5,4,3,3,4,5,3,3,5,4,3,3,4,5,3,3,5,4,3,3,4,5,3,3},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,6,1,1,1,1,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6,1,6,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
		{4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5},
		{4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5,5,4,4,4,4,5,5,5},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},

	};
	//マップデータをコピー
	memcpy(m_map, block_data, sizeof(int) * (25 * 55));

}
//アクション
void CObjChinaTown::Action()
{
	////主人公の位置を取得
	//CObjHero* hero = (CObjHero*)Objs::GetObj(OBJ_HERO);
	//float hx = hero->GetX2();//スクロール
	//float hy = hero->GetY2();

	////主人公の衝突状態確認用フラグの初期化
	//hero->SetUp(false);
	//hero->SetDown(false);
	//hero->SetLeft(false);
	//hero->SetRight(false);

	////後方スクロールライン　←
	//if (hx < 400)
	//{
	//	hero->SetX2(400); //主人公はラインを超えないようにする
	//	mx_scroll -= -6.0f + hero->GetVX(); //主人公は本来動くべき分の値をm_scrollに加える

	//}

	////前方スクロールライン →
	//if (hx > 400)
	//{
	//	hero->SetX2(400); //主人公はラインを超えないようにする
	//	mx_scroll -= 6.0f + hero->GetVX(); //主人公は本来動くべき分の値をm_scrollに加える

	//}

	////スクロールライン　↑
	//if (hy > 300)
	//{
	//	hero->SetY2(300); //主人公はラインを超えないようにする
	//	my_scroll -= 6.0f + hero->GetVY(); //主人公は本来動くべき分の値をm_scrollに加える

	//}
	////スクロールライン　↓
	//if (hy < 300)
	//{
	//	hero->SetY2(300); //主人公はラインを超えないようにする
	//	my_scroll -= -6.0f + hero->GetVY(); //主人公は本来動くべき分の値をm_scrollに加える
	//}

	////m_mapの全要素にアクセス
	//for (int i = 0; i < 25; i++)
	//{
	//	for (int j = 0; j < 55; j++)
	//	{
	//		if (m_map[i][j] > 0)
	//		{

	//			//要素番号を座標に変更
	//			float x = j * 32.0f;
	//			float y = i * 32.0f;

	//			//主人公とブロックの当たり判定
	//			if ((hx + (-mx_scroll) + 64.0f > x) && (hx + (-mx_scroll) < x + 64.0f) && (hy + (-my_scroll) + 64.0f > y) && (hy + (-my_scroll) < y + 64.0f))
	//			{
	//				//上下左右判定

	//				//vectorの作成
	//				float vx = (hx + (-mx_scroll)) - x;
	//				float vy = (hy + (-my_scroll)) - y;

	//				//長さを求める
	//				float len = sqrt(vx * vx + vy * vy);//sqrt関数は、平方根を返す

	//				//角度を求める
	//				float r = atan2(vy, vx);//atan2関数はアークタンジェントを返す
	//				r = r * 180.0f / 3.14f;

	//				if (r <= 0.0f)//abs関数は、値の絶対値を求める 符号を無視した値
	//					r = abs(r);
	//				else
	//					r = 360.0f - abs(r);

	//				//lenがある一定の長さのより短い場合判定に入る
	//				if (len < 44.0f)
	//				{

	//					//角度で上下左右を判定
	//					if ((r < 45 && r >= 0) || r > 315)
	//					{
	//						//右
	//						hero->SetRight(true);//主人公の左の部分が衝突している
	//						hero->SetX2(x + 32.0f + (mx_scroll));//ブロックの位置+主人公の幅
	//						hero->SetVX(0.0f);//-VX*反発係数
	//					}
	//					if (r > 45 && r < 135)
	//					{
	//						//上
	//						hero->SetDown(true);//主人公の下の部分が衝突している
	//						hero->SetY2(y - 32.0f + (my_scroll));//ブロックの位置-主人公の幅
	//						hero->SetVY(0.0f);//-VX*反発係数

	//					}
	//					if (r > 135 && r < 225)
	//					{
	//						//左
	//						hero->SetLeft(true);//主人公の右の部分が衝突している
	//						hero->SetX2(x - 32.0f + (mx_scroll));//ブロックの位置-主人公の幅
	//						hero->SetVX(0.0f);//-VX*反発係数
	//					}
	//					if (r > 225 && r < 315)
	//					{
	//						//下
	//						hero->SetUp(true);//主人公の上の部分が衝突している
	//						hero->SetY2(y + 32.0f + (my_scroll));//ブロックの位置+主人公の幅
	//						hero->SetVY(0.0f);//-VX*反発係数
	//					}
	//				}
	//			}
	//		}
	//	}
	//}
}
//ドロー
void CObjChinaTown::Draw()
{
	float c[4] = { 1.0f,1.0f,1.0f,1.0f };

	RECT_F src;//描画元切り取り位置
	RECT_F dst;//描画先表示位置

	//背景表示
	src.m_top = 20.0f;
	src.m_left = 0.0f;
	src.m_right = 0.0f;
	src.m_bottom = 800.0f;

	dst.m_top = 0.0f;
	dst.m_left = 0.0f;
	dst.m_right = 750.0f;
	dst.m_bottom = 800.0;
	Draw::Draw(10, &src, &dst, c, 0.0f);

	//マップチップによるblock設置
	for (int i = 0; i < 25; i++)
	{
		for (int j = 0; j < 55; j++)
		{
			if (m_map[i][j]==3)
			{
				//切り取り位置の設定
				src.m_top = 73.0f;//y
				src.m_left = 69.0f;//x
				src.m_right = 69.0f;//x
				src.m_bottom = 80.0f;//y

				//表示位置の設定
				dst.m_top = i * 32.0f;
				dst.m_left = j * 32.0f;
				dst.m_right = dst.m_left + 32.0f;
				dst.m_bottom = dst.m_top + 32.0f;

			}
			if (m_map[i][j] == 4)
			{
				//切り取り位置
				src.m_top = 243.0f;
				src.m_left = 135.0f;
				src.m_right = 140.0f;
				src.m_bottom = 245.0f;

				//表示位置の設定
				dst.m_top = i * 32.0f;
				dst.m_left = j * 32.0f;
				dst.m_right = dst.m_left + 32.0f;
				dst.m_bottom = dst.m_top + 32.0f;

			}
			if (m_map[i][j] == 5)
			{
				//切り取り位置
				src.m_top = 243.0f;
				src.m_left = 135.0f;
				src.m_right = 140.0f;
				src.m_bottom = 245.0f;

				//表示位置の設定
				dst.m_top = i * 32.0f;
				dst.m_left = j * 32.0f;
				dst.m_right = dst.m_left + 32.0f;
				dst.m_bottom = dst.m_top + 32.0f;

			}
			if (m_map[i][j] == 6)
			{
				//切り取り位置
				src.m_top = 68.0f;
				src.m_left = 118.0f;
				src.m_right = 120.0f;
				src.m_bottom = 69.0f;

				//表示位置の設定
				dst.m_top = i * 32.0f;
				dst.m_left = j * 32.0f;
				dst.m_right = dst.m_left + 32.0f;
				dst.m_bottom = dst.m_top + 32.0f;

			}
			if (m_map[i][j] == 7)
			{
				//切り取り位置
				src.m_top = 140.0f;
				src.m_left = 240.0f;
				src.m_right = 240.0f;
				src.m_bottom = 138.0f;

				//表示位置の設定
				dst.m_top = i * 32.0f;
				dst.m_left = j * 32.0f;
				dst.m_right = dst.m_left + 32.0f;
				dst.m_bottom = dst.m_top + 32.0f;
				//描画
				Draw::Draw(10, &src, &dst, c, 0.0f);
			}
		}
	}
}